!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),o.textContent=""},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},o=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0};function n(e,t,r="Save",o="Saving..."){e.textContent=t?o:r}const a=document.getElementById("profile-avatar");a.src="2fc47fd8e9a9bcd9612f.jpg";const s=document.querySelector("#avatar-modal"),c=document.querySelector(".profile__avatar-edit"),i=s.querySelector(".modal__form"),l=s.querySelector("#profile-avatar-input"),d=document.querySelector(".cards__list"),u=document.querySelector(".profile__edit-button"),m=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),_=document.querySelector("#edit-modal"),f=_.querySelector("#name"),v=_.querySelector("#description"),p=_.querySelector(".modal__form"),y=document.querySelector(".profile__add-button"),b=document.querySelector("#new-post-modal"),S=b.querySelector("#card-image"),k=b.querySelector("#card-caption"),q=b.querySelector(".modal__form"),E=b.querySelector(".modal__submit-button"),L=document.querySelector("#preview-modal"),C=L.querySelector(".modal__image"),g=L.querySelector(".modal__caption"),U=document.querySelector("#delete-post-modal"),$=U.querySelector("#delete-form"),A=U.querySelector("#modal__cancel-button"),x=document.querySelectorAll(".modal__close-button"),D=document.querySelector("#card-template"),I=document.querySelectorAll(".modal"),R=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}editUserAvatar({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}addNewCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a4f15128-4ba2-4653-a32c-921f0ed0e86f","Content-Type":"application/json"}});function w(e){e.classList.add("modal_opened"),document.addEventListener("keydown",B)}function T(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",B)}R.getAppInfo().then((([e,t])=>{e.forEach((e=>{d.append(N(e))})),m.textContent=t.name,h.textContent=t.about,a.src=t.avatar})).catch(console.error),x.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>T(t)))})),c.addEventListener("click",(()=>{w(s)})),i.addEventListener("submit",(function(e){e.preventDefault(),n(e.submitter,!0),R.editUserAvatar({avatar:l.value}).then((e=>{a.src=e.avatar,T(s)})).catch(console.error).finally((()=>{n(e.submitter,!1)}))})),u.addEventListener("click",(function(){f.value=m.textContent,v.value=h.textContent,((e,r,o)=>{r.forEach((r=>{t(e,r,o)}))})(p,[f,v],e),w(_)})),p.addEventListener("submit",(function(e){e.preventDefault(),n(e.submitter,!0),R.editUserInfo({name:f.value,about:v.value}).then((e=>{m.textContent=e.name,h.textContent=e.about,T(_)})).catch(console.error).finally((()=>{n(e.submitter,!1)}))}));const B=e=>{"Escape"===e.key&&(e.preventDefault(),T(document.querySelector(".modal_opened")))};function N(e){const t=D.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__trash-button");return e.isLiked&&n.classList.add("card__like-button_liked"),n.addEventListener("click",(()=>{n.classList.contains("card__like-button_liked")?R.removeLike(e._id).then((e=>{n.classList.toggle("card__like-button_liked")})).catch(console.error):R.addLike(e._id).then((e=>{n.classList.toggle("card__like-button_liked")})).catch(console.error)})),a.addEventListener("click",(()=>{!function(e,t){P=e,j=t._id,w(U)}(t,e)})),o.addEventListener("click",(()=>{C.src=e.link,C.alt=e.name,g.textContent=e.name,w(L)})),r.textContent=e.name,o.src=e.link,o.alt=e.name,t}let P,j;y.addEventListener("click",(()=>{w(b)})),q.addEventListener("submit",(function(t){t.preventDefault(),n(t.submitter,!0),R.addNewCard({name:k.value,link:S.value}).then((r=>{const n={name:r.name,link:r.link,_id:r._id};d.prepend(N(n)),T(b),o(E,e),t.target.reset()})).catch(console.error).finally((()=>{n(t.submitter,!1)}))})),$.addEventListener("submit",(e=>{e.preventDefault(),function(e){n(e.submitter,!0,"Delete","Deleting..."),R.deleteCard(j).then((()=>{P.remove(),T(U)})).catch(console.error).finally((()=>{n(e.submitter,!1,"Delete")}))}(e)})),A.addEventListener("click",(()=>{T(U)})),I.forEach((e=>{e.addEventListener("click",(e=>{e.target.classList.contains("modal")&&T(e.target)}))})),(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((o=>{((e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);r(n,a,o),n.forEach((s=>{s.addEventListener("input",(()=>{((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.add(o.inputErrorClass),n.textContent=r})(e,r,r.validationMessage,o)})(e,s,o),r(n,a,o)}))}))})(o,e)}))})(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,